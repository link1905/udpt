version: "3.7"

services:
    udpt-django:
        build:
            context: .
            dockerfile: ./compose/local/django/Dockerfile
        container_name: udpt_dev
        volumes:
            - .:/app
        env_file:
            - ./.envs/.local/.django
            - ./.envs/.local/.postgres
        environment:
            - USE_FORUM_READ_APP=False
            - RABBIT_MQ_URL=udpt-rabbitmq
        ports:
            - 8000:8000
        command: /start
        depends_on:
            udpt-postgres:
                condition: service_healthy
            udpt-redis:
                condition: service_healthy
            udpt-rabbitmq:
                condition: service_healthy

    udpt-redis:
        image: redis:alpine
        container_name: udpt_redis_dev
        healthcheck:
            test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

    udpt-postgres:
        build:
            context: .
            dockerfile: ./compose/local/postgres/Dockerfile
        container_name: udpt_postgres_dev
        command: postgres -c max_connections=100
        volumes:
            - udpt_db:/var/lib/postgresql/data:Z
        env_file:
            - ./.envs/.local/.postgres
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
            interval: 10s
            timeout: 5s
            retries: 5

    udpt-rabbitmq:
        image: rabbitmq:3.8-management-alpine
        environment:
            - RABBITMQ_DEFAULT_USER=udptgroup1
            - RABBITMQ_DEFAULT_PASS=udptgroup1
        ports:
            # AMQP protocol port
            - '5672:5672'
            # HTTP management UI
            - '15672:15672'
        healthcheck:
            test: rabbitmq-diagnostics check_port_connectivity
            interval: 1s
            timeout: 3s
            retries: 30
volumes:
    udpt_db:
